/*Changed Power of Two, used Binary Exponentiation
Binary exponentiation (also known as exponentiation by squaring) is a trick which allows to calculate  using only  multiplications (instead of  multiplications required by the naive approach).
Raising  to the power of  is expressed naively as multiplication by  done  by a n-1 times: . However, this approach is not practical for large a or n .
The idea of binary exponentiation is, that we split the work using the binary representation of the exponent.
*/
#include<bits/stdc++.h>

using namespace std;
long long binpow(long long a, long long b) {
    if (b == 0)
        return 1;
    long long res = binpow(a, b / 2);
    if (b % 2)
        return res * res * a;
    else
        return res * res;
}

int main(void){
    long long int n;
    cin>>n;
    cout<<binpow(2,n);
}
